<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.bootx.goods.core.inventory.dao.InventoryMapper">

    <!-- 锁定库存 -->
    <update id="lockInventory">
        update goods_goods_sku
        set available = (available - #{count}),
            locked = (locked + #{count}),
            version = (version + 1)
        where id = #{id} and (available - #{count}) >= 0
    </update>
    <!-- 解锁库存 -->
    <update id="unlockInventory">
        update goods_goods_sku
        set available = (available + #{count}),
            locked = (locked - #{count}),
            version = (version + 1)
        where id = #{id} and (locked - #{count}) >= 0
    </update>
    <!-- 减少库存 -->
    <update id="reduceInventory">
        update goods_goods_sku
        set locked = (locked - #{count}),
            sold = (sold + #{count}),
            version = (version + 1)
        where id = #{id} and (locked - #{count}) >= 0
    </update>
    <!-- 增补指定 SKU 的可售库存， 扣减对应售出 -->
    <update id="increaseInventory">
        update goods_goods_sku
        set available = (available + #{count}),
            sold = (sold - #{count}),
            version = (version + 1)
        where id = #{id}
    </update>
    <!-- 增补指定 SKU 的可售库存 -->
    <update id="increaseAvailable">
        update goods_goods_sku
        set available = (available + #{count}),
            capacity = (capacity + #{count}),
            version = (version + 1)
        where id = #{id}
    </update>
    <!-- 扣减指定 SKU 的预占库存并减少总库存 -->
    <update id="reduceLockedAndCapacity">
        update goods_goods_sku
        set locked = (locked - #{count}),
            capacity = (capacity - #{count}),
            version = (version + 1)
        where id = #{id} and (locked - #{count}) >= 0
    </update>
    <!-- 扣减指定 SKU 的售出库存并减少总库存 -->
    <update id="reduceSoldAndCapacity">
        update goods_goods_sku
        set sold = (sold - #{count}),
            capacity = (capacity - #{count}),
            version = (version + 1)
        where id = #{id} and (capacity - #{count}) >= 0 and (sold - #{count}) >= 0
    </update>
</mapper>