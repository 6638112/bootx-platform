server:
  port: 8080
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/bootx-platform?serverTimezone=GMT%2B8&characterEncoding=utf8&allowMultiQueries=true&useSSL=false
    username: root
    password: root
  redis:
    host: 127.0.0.1
    port: 6379
    database: 1
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    listener:
      simple:
        # 重试机制
        retry:
          enabled: true
          max-attempts: 5
  data:
    mongodb:
      host: 127.0.0.1
      database: platform
      port: 27017
      username: admin
      password: '123456'
  #静态资源加载配置
  mvc:
    static-path-pattern: /**
  web:
    resources:
      static-locations: classpath:/static/,classpath:/public/
  quartz:
    # 持久化方式
    job-store-type: jdbc
    #定时任务启动开关，true-开  false-关
    auto-startup: true
    #启动时更新己存在的Job
    overwrite-existing-jobs: true
    properties:
      org:
        quartz:
          scheduler:
            instanceName: quartzScheduler
            instanceId: AUTO
          threadPool:
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
# 开发时显示debug日志
logging:
  level:
    cn.bootx.**: debug
    org.springframework.data.mongodb.core: debug
# 项目配置
bootx:
  common:
    swagger:
      enabled: true
      author: xxm
      version: 1.1.0-alpha-3
      title: bootx开发平台单体版
      description: bootx-platform开发平台单体版
      # 多模块扫码
      base-packages:
        "[基础API]": cn.bootx.baseapi
        "[身份识别和管理]": cn.bootx.iam
        "[消息服务]": cn.bootx.notice
        "[商品服务]": cn.bootx.goods
        "[支付服务]": cn.bootx.payment
        "[销售服务]": cn.bootx.sales
        "[订单服务]": cn.bootx.order
        "[演示模块]": cn.bootx.demo
        "[自定义starter组件]": cn.bootx.starter
    cache:
      keys-ttl:
        "[iam:user:path]" : 5200
    sequence:
      type: jdbc
  starter:
    auth:
      default-password: 123456
      ignore-urls:
        - '/actuator/**'
        - '/v2/api-docs'
        - '/v3/api-docs/**'
        - '/doc.html'
        - '/swagger-resources/**'
        - '/token/**'
        - '/mobile/**'
        - '/webjars/**'
        - '/css/**'
        - '/**'
    audit-log:
      store: mongo
    file-upload:
      server-url: http://127.0.0.1:8080
      upload-type: 2